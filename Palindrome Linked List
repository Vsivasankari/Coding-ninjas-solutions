from sys import stdin
import sys
sys.setrecursionlimit(10 ** 7)
class Node:
    def __init__(self,data):
        
        self.data = data
        self.next = None
        
left = None

def isPalindrome(head):
    
    global left
    
    #Assign left node as start of LinkedList.
    left = head
    
    #Check if LinkedList is palindrome or not
    isPal = isPalindromeUtil(head)
    
    return isPal

def isPalindromeUtil(right):
    
    global left
    
    #Stop recursion when right reach end of LinkedList
    if right is None:
        return True
    
    isPal = isPalindromeUtil(right.next)
    if not isPal:
        return False
    
    
    if left.data == right.data:
        isSame = True
        
    else:
        isSame = False   
    
    left = left.next
    
    return isSame  
    
  
def takeinput():
    
    inputlist=[int(ele) for ele in input().split()]
    
    head=None
    tail=None
    
    for currentData in inputlist:
        
        if currentData == -1:
            break
        
        Newnode=Node(currentData)
        
        if head is None:
            head=Newnode
            tail=Newnode
        else:
            tail.next=Newnode
            tail=Newnode
            
    return head

#Main
t = int(stdin.readline().rstrip())

while t > 0:
    
    head = takeinput()
    
    if isPalindrome(head):
        print('true')
    else:
        print('false')
        
    t -= 1
